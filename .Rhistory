read.csv("luster_paint_data.csv")
library(readr)
luster_paint_data <- read_csv("OSCM/Week2/luster_paint_data.csv")
View(luster_paint_data)
read.csv("luster_paint_data.csv")
View(luster_paint_data)
read.csv("luster_paint_data")
install.packages("readxl")
read_excel("C:\Users\ayool\OneDrive\Documents\OSCM\Week2\\luster_paint_data.xlsx")
library("readxl")
read_excel("C:\Users\ayool\OneDrive\Documents\OSCM\Week2\\luster_paint_data.xlsx")
read_excel("C:\Users\ayool\OneDrive\Documents\OSCM\Week2\luster_paint_data.xlsx")
read_excel("C:\Users\ayool\OneDrive\Documents\OSCM\Week2\luster_paint_data.xlsx")
read_excel("C:\\Users\\ayool\\OneDrive\\Documents\\OSCM\Week2\\luster_paint_data.xlsx")
OSCM_Case <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
(OSCM_Case)
plot(OSCM_Case$Year,OSCM_Case$Paint.Sales...Millions.,xlab = "Year",ylab = "Paint Sales")
OSCM_Case <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
summary(OSCM_Case)
View(OSCM_Case)
plot(OSCM_Case$Year,OSCM_Case$Paint.Sales...Millions.,xlab = "Year",ylab = "Paint Sales")
OSCM_Case.lm = lm(Paint.Sales...Millions. ~ Year, data = OSCM_Case)
summary(OSCM_Case.lm)
OSCM_Case <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
summary(OSCM_Case)
View(OSCM_Case.lm)
View(OSCM_Case)
plot(OSCM_Case$Year,OSCM_Case$Paint.Sales...Millions.,xlab = "Year",ylab = "Paint Sales")
OSCM_Case.lm = lm(Paint.Sales...Millions. ~ Year, data = OSCM_Case)
LusterSales <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
View(LusterSales)
LusterSales <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
View(LusterSales)
summary(OSCM_Case)
plot(LusterSales$Year,LusterSales$PaintSales,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
LusterSales.lm = lm(PaintSales ~ Year, data = LusterSales)
LusterSales <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
View(LusterSales)
summary(OSCM_Case)
summary(LusterSales)
plot(LusterSales$Year,LusterSales$PaintSales,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
LusterSales.lm = lm(PaintSales ~ Year, data = LusterSales)
summary(LusterSales.lm)
confint(LusterSales.lm)
coefficients(LusterSales.lm)
YearObs = data.frame(Year=1995)
YearObs
predict(LusterSales.lm, newdata = YearObs)
predict(LusterSales.lm, newdata = YearObs, interval = "predict")
#Q2 Model using construction index
plot(LusterSales$ConstructionIndex,LusterSales$PaintSales,xlab = "Construction Index",ylab = "Paint Sales ($ MIllions)")
LusterSalesCI.lm = lm(PaintSales ~ ConstructionIndex, data = LusterSales)
summary(LusterSalesCI.lm)
confint(LusterSalesCI.lm)
coefficients(LusterSalesCI.lm)
YearObsCI = data.frame(Year=1995)
YearObsCI
predict(LusterSalesCI.lm, newdata = YearObsCI)
YearObsCI = data.frame(Year=1995)
YearObsCI
predict(LusterSalesCI.lm, newdata = YearObsCI)
LusterSales <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/luster_paint_data.csv")
summary(LusterSalesCI.lm)
confint(LusterSalesCI.lm)
coefficients(LusterSalesCI.lm)
YearObsCI = data.frame(Year=1995)
YearObsCI
predict(LusterSalesCI.lm, newdata = YearObsCI)
pairs(LusterSales, pch= "#")
LusterSalesCI.lm = lm(PaintSales ~ ConstructionIndex, data = LusterSales)
predict(LusterSalesCI.lm, newdata = YearObsCI)
predict(LusterSalesCI.lm, newdata = YearObsCI, interval = "predict")
LusterSalesCI.lm = lm(PaintSales ~ ConstructionIndex, data = LusterSales)
summary(LusterSalesCI.lm)
confint(LusterSalesCI.lm)
coefficients(LusterSalesCI.lm)
#Q2 Model using construction index
plot(LusterSales$ConstructionIndex,LusterSales$PaintSales,xlab = "Construction Index",ylab = "Paint Sales ($ MIllions)")
YearObsCI = data.frame(ConstructionIndex=250.00)
YearObsCI
predict(LusterSalesCI.lm, newdata = YearObsCI)
predict(LusterSalesCI.lm, newdata = YearObsCI, interval = "predict")
LusterSales.lm = lm(PaintSales ~ Year, data = LusterSales)
summary(LusterSales.lm)
plot(LusterSales$HomeLoans,LusterSales$PaintSales,xlab = "Home Loans ($ Billions)",ylab = "Paint Sales ($ MIllions)")
LusterSalesHL.lm = lm(PaintSales ~ HomeLoans, data = LusterSales)
summary(LusterSalesHL.lm)
confint(LusterSalesHL.lm)
coefficients(LusterSalesHL.lm)
YearObsHL = data.frame(HomeLoans=42.50)
YearObsHL
predict(LusterSalesCI.lm, newdata = YearObsHL)
predict(LusterSalesHL.lm, newdata = YearObsHL)
predict(LusterSalesHL.lm, newdata = YearObsHL, interval = "predict")
#Q4 Home Loans and Construction Index
pairs(LusterSales, pch= "#")
LusterSalesHLCI.lm = lm(PaintSales ~ HomeLoans + ConstructionIndex, data = LusterSales)
summary(LusterSalesHLCI.lm)
confint(LusterSalesHLCI.lm)
coefficients(LusterSalesHLCI.lm)
YearObsHLCI = data.frame(HomeLoans=42.50, ConstructionIndex = 250.00)
YearObsHLCI
predict(LusterSalesHLCI.lm, newdata = YearObsHLCI)
predict(LusterSalesHLCI.lm, newdata = YearObsHLCI, interval = "predict")
LusterSalesHLCIY.lm = lm(PaintSales ~ HomeLoans + ConstructionIndex + Year, data = LusterSales)
summary(LusterSalesHLCIY.lm)
confint(LusterSalesHLCIY.lm)
coefficients(LusterSalesHLCIY.lm)
YearObsHLCIY = data.frame(HomeLoans=42.50, ConstructionIndex = 250.00, Year = 1995)
YearObsHLCIY
predict(LusterSalesHLCIY.lm, newdata = YearObsHLCIY)
predict(LusterSalesHLCIY.lm, newdata = YearObsHLCIY, interval = "predict")
LusterSalesCIY.lm = lm(PaintSales ~ ConstructionIndex + Year, data = LusterSales)
summary(LusterSalesCIY.lm)
confint(LusterSalesCIY.lm)
coefficients(LusterSalesCIY.lm)
YearObsCIY = data.frame(ConstructionIndex=250.00, Year = 1995)
YearObsCIY
predict(LusterSalesCIY.lm, newdata = YearObsCIY)
predict(LusterSalesCIY.lm, newdata = YearObsCIY, interval = "predict")
LusterSalesHLY.lm = lm(PaintSales ~ HomeLoans + Year, data = LusterSales)
summary(LusterSalesHLY.lm)
confint(LusterSalesHLY.lm)
coefficients(LusterSalesHLY.lm)
YearObsHLY = data.frame(HomeLoans=42.50, Year = 1995)
YearObsHLY
predict(LusterSalesHLY.lm, newdata = YearObsHLY)
predict(LusterSalesHLY.lm, newdata = YearObsHLY, interval = "predict")
caesarstrain <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/caesars_entertainment_data_traindataset.csv")
caesarstrain <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/Live Session/caesars_entertainment_data_traindataset.csv")
View(caesarstrain)
summary(caesarstrain)
plot(caesars_entertainment_data_traindataset$SuperBowl,caesars_entertainment_data_traindataset$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesars_entertainment_data_traindataset$SuperBowl,caesars_entertainment_data_traindataset$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesarstrain$SuperBowl,caesarstrain$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesarstrain$Date[SuperBowl],caesarstrain$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesarstrain$Date[SuperBowl==1],caesarstrain$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
caesarstrain = lm(checkins ~ SuperBowl, data = caesarstrain)
summary(caesarstrain.lm)
caesarstrain = lm(checkins ~ SuperBowl, data = caesarstrain)
caesarstrain = lm(checkins ~ SuperBowl, data = caesarstrain)
caesarstrain = lm(checkins ~ SuperBowl, data = caesarstrain)
plot(caesarstrain[which(caesarstrain$Date & caesarstrain$SuperBowl==1)],caesarstrain$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesarstrain[which(caesarstrain$SuperBowl==1)],caesarstrain$checkins,xlab = "Year",ylab = "Paint Sales ($ MIllions)")
plot(caesarstrain[caesarstrain$SuperBowl==1)],caesarstrain$checkins,xlab = "SuperBowl",ylab = "Checkins")
plot(caesarstrain[caesarstrain$SuperBowl=="1")],caesarstrain$checkins,xlab = "SuperBowl",ylab = "Checkins")
plot(caesarstrain[caesarstrain$SuperBowl=="1"],caesarstrain$checkins,xlab = "SuperBowl",ylab = "Checkins")
newdata <- subset(caesarstrain, SuperBowl = 1,
select=c(Date, checkins))
newdata <- subset(caesarstrain, SuperBowl = 1, select=c(Date, checkins))
holidaysubset = caesarstrain[caesarstrain$SuperBowl=="1"]
holidaysubset
View(holidaysubset)
holidaysubset = caesarstrain[caesarstrain$SuperBowl=="1",]
newdata <- caesarstrain[caesarstrain$SuperBowl=="1",]
newdata = caesarstrain[caesarstrain$SuperBowl=="1",]
newdata = caesarstrain[caesarstrain$SuperBowl=="1"]
newdata
newdata <- subset(caesarstrain, SuperBowl= 1,
select=c(Date, checkins))
caesarstrain$DATE <- as.Date(caesarstrain$DATE,
format = "%m/%d/%y")
caesarstrain$DATE <- as.Date(caesarstrain$DATE, format = "%m/%d/%y")
class(caesarstrain$Date)
caesarstrain$Date <- as.Date(caesarstrain$Date, format = "%m/%d/%y")
caesarstrain <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/Live Session/caesars_entertainment_data_traindataset.csv")
View(caesarstrain)
class(caesarstrain$DATE)
caesarstrain$Date <- as.Date(caesarstrain$Date, format = "%m/%d/%y")
class(caesarstrain$SuperBowl)
caesarstrain$DATE <- as.Date(caesarstrain$Date, format = "%m/%d/%y")
caesarstrain$DATE <- as.Date(caesarstrain$DATE, format = "%m/%d/%y")
class(caesarstrain$DATE)
newdata <- subset(caesarstrain, SuperBowl= 1, select=c(DATE, checkins))
newdata
newdata <- subset(caesarstrain, SuperBowl= "1", select=c(DATE, checkins))
newdata
caesarstrain <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/Live Session/caesars_entertainment_data_traindataset.csv")
View(caesarstrain)
caesarstrain$Date <- as.Date(caesarstrain$Date, format = "%m/%d/%y")
class(caesarstrain$Date)
newdata <- subset(caesarstrain, SuperBowl= 1, select=c(Date, checkins))
newdata
newdata = caesarstrain[caesarstrain$SuperBowl=="1"]
class(caesarstrain$SuperBowl)
newdata <- subset(caesarstrain, SuperBowl = 1)
newdata
newdata <- subset(caesarstrain, SuperBowl = 1, select=c(Date, checkins))
newdata
newdata <- subset(caesarstrain, SuperBowl = 1 | SuperBowl>0, select=c(Date, checkins))
newdata
newdata <- subset(caesarstrain, SuperBowl > 1 | SuperBowl > 0, select=c(Date, checkins))
newdata
plot(caesarstrain$Date,caesarstrain$checkins,xlab = "SuperBowl",ylab = "Checkins")
plot(newdata$Date,newdata$checkins,xlab = "SuperBowl",ylab = "Checkins")
caesarstrain <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week2/Live Session/caesars_entertainment_data_traindataset.csv")
newdata <- subset(caesarstrain, SuperBowl > 1 | SuperBowl > 0, select=c(Date, checkins))
newdata
plot(newdata$Date,newdata$checkins,xlab = "SuperBowl",ylab = "Checkins")
newdata = lm(checkins ~ SuperBowl, data = newdata)
newdata = lm(checkins ~ Date, data = newdata)
summary(newdatal.lm)
summary(newdata.lm)
summary(newdata)
qnorm(42,5000,1000)
qnorm(0.42,5000,1000)
qnorm(0.4166,5000,1000)
flashiondata <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week7/flashion_data_ls.csv")
str(flashiondata)
rcorr(flashiondata)
install.packages("Hmisc")
rcorr(flashiondata)
library(Hmisc)
rcorr(flashiondata)
cor.test(flashiondata)
rcorr(flashiondata$Quantity.Sold, flashiondata$Month)
install.packages("ggpubr")
install.packages("ggpubr")
cor.test(flashiondata)
rcorr(flashiondata)
rcorr(flashiondata$Quantity.Sold, flashiondata$Month)
symnum(cor(flashiondata, use = "complete.obs"))
cor(flashiondata)
summary(flashiondata.lm)
# Price
flashiondata.lm = lm(Quantity.Sold ~ Price, data = flashiondata)
summary(flashiondata.lm)
#DOW
flashiondataDOW.lm = lm(Quantity.Sold ~ Event.Start.DOW, data = flashiondata)
summary(flashiondataDOW.lm)
#Start Time
flashiondataTM.lm = lm(Quantity.Sold ~ Event.Start.Time, data = flashiondata)
summary(flashiondataTM.lm)
#Month
flashiondataM.lm = lm(Quantity.Sold ~ Month, data = flashiondata)
summary(flashiondataM.lm)
#Shipping Method
flashiondataSM.lm = lm(Quantity.Sold ~ Shipping.Method, data = flashiondata)
summary(flashiondataSM.lm)
#Department
flashiondataD.lm = lm(Quantity.Sold ~ Department, data = flashiondata)
summary(flashiondataD.lm)
flashiondata <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week7/flashion_data_ls.csv")
summary(flashiondata)
# Price**
# demand drops by an average 0.02 when price increases by $1
flashiondata.lm = lm(Quantity.Sold ~ Price, data = flashiondata)
summary(flashiondata.lm)
#DOW**
flashiondataDOW.lm = lm(Quantity.Sold ~ Event.Start.DOW, data = flashiondata)
summary(flashiondataDOW.lm)
#Start Time*
flashiondataTM.lm = lm(Quantity.Sold ~ Event.Start.Time, data = flashiondata)
summary(flashiondataTM.lm)
#Shipping Method**
flashiondataSM.lm = lm(Quantity.Sold ~ Shipping.Method, data = flashiondata)
summary(flashiondataSM.lm)
#Month**
flashiondataM.lm = lm(Quantity.Sold ~ Month, data = flashiondata)
summary(flashiondataM.lm)
#Department
flashiondataD.lm = lm(Quantity.Sold ~ Department, data = flashiondata)
summary(flashiondataD.lm)
class(flashiondata$Style.)
class(flashiondata$Event.)
class(flashiondata$Starting.Inventory)
#DOW**
flashiondataDOW.lm = lm(Quantity.Sold ~ Event.Start.DOW, data = flashiondata)
summary(flashiondataDOW.lm)
#Shipping Method**
flashiondataSM.lm = lm(Quantity.Sold ~ Shipping.Method, data = flashiondata)
summary(flashiondataSM.lm)
#Month**
flashiondataM.lm = lm(Quantity.Sold ~ Month, data = flashiondata)
summary(flashiondataM.lm)
#Department
flashiondataD.lm = lm(Quantity.Sold ~ Department, data = flashiondata)
summary(flashiondataD.lm)
#Start Time*
flashiondataTM.lm = lm(Quantity.Sold ~ Event.Start.Time, data = flashiondata)
summary(flashiondataTM.lm)
#Department
#average demand for footwear is 33.5, mens apparel has the lowest demand
flashiondataD.lm = lm(Quantity.Sold ~ Department, data = flashiondata)
summary(flashiondataD.lm)
# Price**
# demand drops by an average 0.02 when price increases by $1
flashiondata.lm = lm(Quantity.Sold ~ Price, data = flashiondata)
summary(flashiondata.lm)
#DOW**
#Friday predicts average demand of 32.2239 when event is on friday, saturday and sunday have the lowest demand
flashiondataDOW.lm = lm(Quantity.Sold ~ Event.Start.DOW, data = flashiondata)
summary(flashiondata.lm)
??rcorr
#DOW**
#Friday predicts average demand of 32.2239 when event is on friday, saturday and sunday have the lowest demand
flashiondataDOW.lm = lm(Quantity.Sold ~ Event.Start.DOW, data = flashiondata)
summary(flashiondataDOW.lm)
#Start Time*
flashiondataTM.lm = lm(Quantity.Sold ~ Event.Start.Time, data = flashiondata)
summary(flashiondataTM.lm)
#Shipping Method***
#drop shipping is better
flashiondataSM.lm = lm(Quantity.Sold ~ Shipping.Method, data = flashiondata)
summary(flashiondataSM.lm)
#Month***
#the average demand for november is ~33
flashiondataM.lm = lm(Quantity.Sold ~ Month, data = flashiondata)
summary(flashiondataM.lm)
#Department
#average demand for footwear is 33.5, mens apparel has the lowest demand
flashiondataD.lm = lm(Quantity.Sold ~ Department, data = flashiondata)
summary(flashiondataD.lm)
flashiondataPD.lm = lm(Quantity.Sold ~ Price + Event.Start.DOW, data = flashiondata)
summary(flashiondataPD.lm)
flashiondataPM.lm = lm(Quantity.Sold ~ Price + Month, data = flashiondata)
summary(flashiondataPM.lm)
flashiondataPS.lm = lm(Quantity.Sold ~ Price + Shipping.Method, data = flashiondata)
summary(flashiondataPS.lm)
flashiondataPS.lm = lm(Quantity.Sold ~ Event.Start.DOW + Shipping.Method, data = flashiondata)
summary(flashiondataPS.lm)
flashiondataF.lm = lm(Quantity.Sold ~ Price, data = flashiondata$Department=="Footwear")
flashiondataF.lm = lm(Quantity.Sold ~ Price, data = flashiondata$Department= "Footwear")
flashiondataF.lm = lm(Quantity.Sold ~ Price, data = flashiondata$Department)
flashiondata <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week7/women.csv")
flashiondata <- read.csv("C:/Users/ayool/OneDrive/Documents/OSCM/Week7/women.csv")
# Price**
# demand drops by an average 0.02 when price increases by $1
flashiondata.lm = lm(Quantity.Sold ~ Price, data = flashiondata)
summary(flashiondata.lm)
# Price**
# demand drops by an average 0.02 when price increases by $1
flashiondata.lm = lm(Quantity.Sold ~ Price, data = flashiondata)
summary(flashiondata.lm)
summary(df_tfa_a)
load("C:/Users/ayool/Downloads/unit1-1rstudio-export/.RData")
load("~/.RData")
install.packages("psych")
if(!require(knitr)){
install.packages("knitr", dependencies = TRUE)
}
library(knitr)
knitr::include_graphics("window.png")
states <- readRDS("states.rds")
View(states)
knitr::opts_chunk$set(echo = TRUE)
options("scipen"=100, "digits"=7)
options("scipen"=100, "digits"=7)
library(dplyr) # loading required library
setwd("C:/Users/ayool/MechaCar_Statistical_Analysis")
MechaCar_mpg_df <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(MechaCar_mpg_df)
MecharCar_mpg_matrix <- as.matrix(MechaCar_mpg_df[,c("vehicle_length","vehicle_weight","spoiler_angle","ground_clearance","AWD","mpg")])
cor_MecharCar_mpg_matrix <- cor(MecharCar_mpg_matrix)
cor_MecharCar_mpg_matrix
mpg_matrix <- cor(MechaCar_mpg_df)
mpg_matrix
lm_MecharCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg_df)
lm_MecharCar_mpg
summary_lm_MecharCar_mpg <- summary(lm_MecharCar_mpg)
summary_lm_MecharCar_mpg
Suspension_Coil_df <- read.csv(file='Suspension_Coil.csv',stringsAsFactors = F)
head(Suspension_Coil_df)
total_summary <- summarize(Suspension_Coil_df, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
total_summary
lot_summary <- Suspension_Coil_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
lot_summary
View(total_summary)
View(lot_summary)
View(lm_MecharCar_mpg)
View(lm_MecharCar_mpg)
View(MechaCar_mpg_df)
View(Suspension_Coil_df)
sample_table <- Suspension_Coil_df %>% sample_n(50)
sample_table
plt <- ggplot(sample_table,aes(x=PSI))
library(dplyr) # loading required library
library(tidyverse)
plt <- ggplot(sample_table,aes(x=PSI))
plt + geom_density()
t.test((sample_table$PSI),mu=mean((Suspension_Coil_df$PSI)))
t.test((sample_table$PSI),mu=1500((Suspension_Coil_df$PSI)))
t.test((sample_table$PSI),1500=mean((Suspension_Coil_df$PSI)))
t.test((sample_table$PSI),mu=mean((Suspension_Coil_df$PSI)))
?t.test()
Lot_sample_table <- Suspension_Coil_df %>% sample_n(100)
Lot_sample_table <- Suspension_Coil_df %>% sample_n(100)
head(Lot_sample_table)
sample_table <- Suspension_Coil_df %>% sample_n(50)
head(Lot_sample_table)
plt <- ggplot(Lot_sample_table,aes(x=PSI))
plt + geom_density()
t.test(subset(Lot_sample_table$PSI, Lot_sample_table$Manufacturing_Lot==1),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Lot_sample_table$PSI, Lot_sample_table$Manufacturing_Lot==2),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Lot_sample_table$PSI, Lot_sample_table$Manufacturing_Lot==3),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Suspension_Coil_df$PSI Suspension_Coil_df$Manufacturing_Lot==1),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Suspension_Coil_df$PSI, Suspension_Coil_df$Manufacturing_Lot==1),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Suspension_Coil_df$PSI, Suspension_Coil_df$Manufacturing_Lot==1),mu=mean(sample_table$PSI))
t.test(subset(Suspension_Coil_df[3], Suspension_Coil_df[2]==1),mu=mean(sample_table$PSI))
t.test(subset(Suspension_Coil_df[3], Suspension_Coil_df[2]==1),mu=mean(sample_table[3]))
t.test(subset(Suspension_Coil_df[2], Suspension_Coil_df[1]==1),mu=mean(sample_table[2]))
sub_ <- subset(Lot_sample_table$PSI)
sub_ <- subset(Lot_sample_table$PSI,Lot_sample_table$Manufacturing_Lot==1)
View(Lot_sample_table)
t.test(subset(Suspension_Coil_df$PSI,Suspension_Coil_df$Manufacturing_Lot=="Lot1"),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Suspension_Coil_df$PSI,Suspension_Coil_df$Manufacturing_Lot=="Lot2"),mu=mean(Suspension_Coil_df$PSI))
t.test(subset(Suspension_Coil_df$PSI,Suspension_Coil_df$Manufacturing_Lot=="Lot3"),mu=mean(Suspension_Coil_df$PSI))
